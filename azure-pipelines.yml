# The triggers for this pipeline are defined in Azure Dev Ops Build settings
 
pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'
  displayName: 'Use Python 3.6'

# Shouldnt need this here but Duffle Build pushes to the registry
- task: Docker@2
  inputs:
    command: login
    containerRegistry: CNABRegistry
  displayName: 'Docker Registry Login'

- bash: $(Build.Repository.LocalPath)/build/setup_agent.sh
  env:
    agent_temp_directory: $(Agent.TempDirectory)
    repo_name: $(Build.Repository.Name)
    pr_number: $(System.PullRequest.PullRequestNumber)
    repo_local_path: $(Build.SourcesDirectory)
    reason: $(Build.Reason)
    source_branch: $(Build.SourceBranch)
    repo_uri: $(Build.Repository.Uri)
    source_version:  $(Build.SourceVersion)
  displayName: 'Set Up Agent'

- bash: $(Build.Repository.LocalPath)/build/build_bundle.sh
  workingDirectory: $(taskdir)
  env:
    tool: $(tool)
    image_repo: $(image_repo)
    image_registry: $(image_registry)
    porter_image_suffix: $(porter_image_suffix)
  condition: and(succeeded(),eq(variables.BuildRequired, 'true'))
  displayName: 'Run builder tool to build and validate the bundle'

- task: Docker@2
  inputs:
    command: push
    containerRegistry: CNABRegistry
    repository: $(image_repo)
    tags: $(ii_tag)
  condition: and(succeeded(),eq(variables['Build.Reason'], 'IndividualCI'),eq(variables['tool'], 'duffle'),eq(variables.BuildRequired, 'true'))
  displayName: 'Docker Push'

- bash: $(Build.Repository.LocalPath)/build/push_bundle.sh
  workingDirectory: $(taskdir)
  env:
    agent_temp_directory: $(Agent.TempDirectory)
    image_repo: $(image_repo)
    image_registry: $(image_registry)
  condition: and(succeeded(),eq(variables['Build.Reason'], 'IndividualCI'),eq(variables.BuildRequired, 'true'))
  displayName: 'Push bundle.json to registry using ORAS'
